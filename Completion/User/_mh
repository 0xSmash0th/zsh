#compdef folder folders comp inc mark refile repl scan show next prev rmm pick whom mhn mhpath

# Completion for all possible MH commands.
# Alter the following two to your own mh directory and the directory
# where standard mh library files live.  (It works anyway, but this
# will save a little time.)

local mymhdir=~/Mail
local mhlib=/usr/lib/mh

local prev="$words[CURRENT-1]" expl

# To be on the safe side, check this exists and if not, get it anyway.
[[ -d $mymhdir ]] || mymhdir=$(mhpath +)

if compset -P 1 -; then
  # get list of options, which MH commands can generate themselves
  # awk is just too icky to use for this, sorry.  send me one if
  # you come up with it.
  _description expl option
  compadd "$expl[@]" - $($words[1] -help | perl -ne 'if (/^\s*-\(?(\S+)/) {
    $n = $1;
    $n =~ s/\)//g;
    print $n =~ s/^\[([a-z]+)\]// ? "$n\n$1$n\n" : "$n\n";
  }')
  return
elif compset -P 1 '[+@]' || [[ "$prev" = -draftfolder ]]; then
  # Complete folder names.
  local mhpath

  if [[ $IPREFIX != '@' ]]; then
    [[ $IPREFIX = '+' ]] || IPREFIX=+
    mhpath=$mymhdir
  else
    mhpath=$(mhpath)
  fi

  # painless, or what?
  _description expl 'MH folder'
  _path_files "$expl[@]" -W mhpath -/
elif [[ "$prev" = -(editor|(whatnow|rmm|show|more)proc) ]]; then
  _command_names -e
elif [[ "$prev" = -file ]]; then
  _files
elif [[ "$prev" = -(form|audit|filter) ]]; then
  # Need some MH template file, which may be in our own MH directory
  # or with the standard library.
  local mhfpath
  # This is the only place we need mhlib, so leave the test till here.
  [[ -d $mhlib ]] || { mhlib=$(mhparam mhlproc); mhlib=$mhlib:h; }
  mhfpath=($mymhdir $mhlib)

  _description expl 'MH template file'
  _files "$expl[@]" -W mhfpath -g '*(.)'
elif [[ "$prev" = -(no|)cc ]]; then
  _description expl 'CC address'
  compadd "$expl[@]" all to cc me
elif [[ "$prev" = -[rw]cache ]]; then
  _description expl cache
  compadd "$expl[@]" public private never ask
else
  # Generate sequences.
  local foldnam folddir f ret

  for f in $words; do
    [[ $f = [@+]* ]] && foldnam=$f
  done
  if [[ $foldnam = '+'* ]]; then
    folddir=$mymhdir/${foldnam#+}
  elif [[ $foldnam = '@'* ]]; then
    folddir=$(mhpath)/${foldnam#@}
  else
    folddir=$(mhpath)
    # leaving foldnam empty works here
  fi

  _description expl sequence
  compadd "$expl[@]" $(mark $foldnam 2>/dev/null | awk -F: '{ print $1 }') &&
      ret=0
  compadd "$expl[@]" reply next cur prev first last all unseen && ret=0
  _files "$expl[@]" -W folddir -g '<->' && ret=0

  return ret
fi
