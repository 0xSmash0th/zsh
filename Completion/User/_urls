#autoload

# Usage: _urls [-f]
# Options:
#  -f : complete files first.
#
# Configuration keys used:
#
#  urls_path
#    The path to a directory containing a URL database, such as:
#
#      % cd ~/.zsh/urls
#      % find . -ls
#      ... drwxr-xr-x ... 512 Sep  3 02:46 .
#      ... drwxr-xr-x ... 512 Sep  3 02:48 ./http
#      ... drwxr-xr-x ... 512 Sep  3 02:52 ./http/www.zsh.org
#      ... drwxr-xr-x ... 512 Sep  3 03:01 ./http/www.zsh.org/mla
#      ... drwxr-xr-x ... 512 Sep  3 03:01 ./http/www.zsh.org/mla/workers
#      ... drwxr-xr-x ... 512 Sep  3 03:01 ./http/www.zsh.org/mla/workers/1999
#      ... -rw-r--r-- ...   0 Sep  3 03:01 ./http/www.zsh.org/mla/workers/1999/index.html
#      ... drwxr-xr-x ... 512 Sep  3 02:48 ./http/sunsite.auc.dk
#      ... drwxr-xr-x ... 512 Sep  3 02:48 ./http/sunsite.auc.dk/zsh
#      ... drwxr-xr-x ... 512 Sep  3 02:47 ./bookmark
#      ... drwxr-xr-x ... 512 Sep  3 02:48 ./bookmark/zsh
#      ... -rw-r--r-- ...  27 Sep  3 02:47 ./bookmark/zsh/home
#      ... -rw-r--r-- ...  20 Sep  3 02:48 ./bookmark/zsh/meta
#      % cat bookmark/zsh/home 
#      http://sunsite.auc.dk/zsh/
#      % cat bookmark/zsh/meta
#      http://www.zsh.org/
#
#  urls_localhttp
#    Specify a local web server in the form:
#      hostname:doc root:user area
#    where hostname is the name of the web server, doc root is the path to
#    the default web pages for the server and user area is the directory
#    name used by a user placing web pages within their home area.
#    e.g. compconf urls_localhttp=www:/usr/local/apache/htdocs:public_html

local ipre scheme host user dirs files ret=1 expl
local urls_path="${compconfig[urls_path]:-${ZDOTDIR:-$HOME}/.zsh/urls}"
local localhttp_servername="${${(@s.:.)compconfig[urls_localhttp]}[1]}"
local localhttp_documentroot="${${(@s.:.)compconfig[urls_localhttp]}[2]}"
local localhttp_userdir="${${(@s.:.)compconfig[urls_localhttp]}[3]}"

if [[ "$1" = -f ]]; then
  shift
  _files "$@" && return
fi

ipre="$IPREFIX"

if ! [[ -prefix [-+.a-z0-9]#: ]]; then
  _description expl 'URL prefix'
  [[ -d $urls_path/bookmark ]] &&
    compadd "$@" "$expl[@]" -S '' bookmark: && ret=0
  compadd "$@" "$expl[@]" -S '' file: ftp:// gopher:// http:// && ret=0
  return $ret
fi

scheme="${PREFIX%%:*}"
compset -P "[-+.a-z0-9]#:"

case "$scheme" in
  http|ftp|gopher)
    if ! compset -P //; then
      compadd "$@" -S '' //
      return
    fi
  ;;
  file)
    if ! compset -P //; then
      if [ -prefix / ]; then
	_files "$@"
      elif [ ! "$PREFIX" ]; then
	compadd -S '/' - "${PWD%/}"
      fi
      return
    fi
  ;;
  bookmark)
    if [[ -f "$urls_path/$scheme/$PREFIX$SUFFIX" &&
	  -s "$urls_path/$scheme/$PREFIX$SUFFIX" ]]; then
      compadd "$@" -QU -- "$ipre$(<"$urls_path/$scheme/$PREFIX$SUFFIX")" && ret=0
    else
      _description expl 'bookmark'
      _path_files -W "$urls_path/$scheme" "$expl[@]" -S '' -g '*(^/)' && ret=0
      _path_files -W "$urls_path/$scheme" -S/ -r '' -/ && ret=0
    fi
    return $ret
  ;;
esac

# Complete hosts
if ! [[ -prefix */* ]]; then
  dirs=($urls_path/$scheme/$PREFIX*$SUFFIX(/:t))
  (( $#dirs )) || _hosts -S/ && ret=0
  [ "$scheme" = "http" ] && 
    dirs=($dirs $localhttp_servername)
  compadd "$@" -QS/ - $dirs && ret=0
  return $ret
fi

# Complete part after hostname
host=${PREFIX%%/*}
compset -P "$host/"
if [[ "$compconfig[urls_localhttp]" = ${host}:* ]]; then
  if [[ -prefix \~ ]]; then
    compset -P \~
    if [[ -prefix */* ]]; then
      user=${PREFIX%%/*}
      compset -P $user/
      _path_files -W ~$user/$localhttp_userdir -g '*(^/)' && ret=0
      _path_files -W ~$user/$localhttp_userdir -S/ -r '' -/ && ret=0
    else
      _users -S/ && ret=0
    fi
  else
    _path_files -W $localhttp_documentroot -g '*(^/)' && ret=0
    _path_files -W $localhttp_documentroot -S/ -r '' -/ && ret=0
  fi
else
  _path_files -W $urls_path/$scheme/$host/ -g '*(^/)' && ret=0
  _path_files -W $urls_path/$scheme/$host/ -S/ -r '' -/ && ret=0
fi
return $ret
