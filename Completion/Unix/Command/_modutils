#compdef modprobe rmmod

local expl loaded

_modutils_loaded_modules() {

if [[ -r /proc/modules ]]; then
 loaded=(${${(f)"$(</proc/modules)"}%% *})
elif [[ -x /sbin/lsmod ]]; then
 loaded=(${${(f)"$(/sbin/lsmod)"}[2,-1]%% *})
else
 return 1
fi

_wanted modules expl 'loaded module' compadd -a loaded
}

case "$service" in
  rmmod)

  _arguments '(--all)-a[remove all unused autocleanable modules]' \
             '(-a)--all' \
             '(--persist)-e[save persistent data]' \
             '(-e)--persist' \
             '(--help)-h[print help text]' \
             '(-h)--help' \
             '(--stacks)-r[remove a module stack]' \
             '(-r)--stacks' \
             '(--syslog)-s[output to syslog]' \
             '(-s)--syslog' \
             '(--verbose)-v[be verbose]' \
             '(-v)--verbose' \
             '(--version)-V[print version]' \
             '(-V)--version' \
             '*:loaded module:_modutils_loaded_modules' && return 0
  ;;

  modprobe)

  _modprobe_arguments=(
             '(--all)-a[all]' \
             '(-a)--all' \
             '(--showconfig)-c[showconfig]' \
             '(-c)--showconfig' \
             '(--debug)-d[debug]' \
             '(-d)--debug' \
             '(--autoclean)-k[set autoclean]' \
             '(-k)--autoclean' \
             '(--show)-n[do not act]' \
             '(-n)--show'
  )

  _arguments '(--remove)-r[remove]:*:loaded module:->modprobe_remove' \
             '(-r)--remove:*:loaded module:->modprobe_remove' \
	     "$_modprobe_arguments[@]" && return 0

  ;;

esac 

case "$state" in
  modprobe_remove)
        _call_function ret _modutils_$state && return ret
        _arguments "$_modprobe_arguments[@]" \
                   '*:loaded module:_modutils_loaded_modules'
  ;;

esac
